#05_fit_stage
rm(list = ls())
# Mat達o -------------------------------------------------------------------
mat_list = read_rds("data/mat_list.RDS")
#05_fit_stage
rm(list = ls())
library(asreml)
library(readr)
library(tidyverse)
# Mat達o -------------------------------------------------------------------
mat_list = read_rds("data/mat_list.RDS")
rm(list=ls())
gc()
# Library -----------------------------------------------------------------
# Install pacman if not already installed
# if (!require("pacman")) {
#   install.packages("pacman")
#   library(pacman)
# }
# List of packages to load
packages <- c("tidyverse", "asreml", "lme4", "car", "snpReady", "AGHmatrix",
"ASRgenomics", "redxl", "data.table", "gridExtra", "PupillometryR",
"readxl")
library(data.table)
library(tidyr)
library(dplyr)
library(readr)
library(asreml)
#install.packages("StageWise")
# Use pacman to load and install packages if needed
pacman::p_load(char = packages)
# Load functions
#source("ic_reml_asr.R")
# Phenotypic data ---------------------------------------------------------
pheno <- read_excel("C:/Users/LENOVO/OneDrive/POS-DOC/TPC/data/new_data/dados_TPC.xlsx",
sheet = "phenotype")
head(pheno)
str(pheno)
dim(pheno)
pheno$REP   = as.factor(pheno$Rep)
pheno$IBLC  = as.factor(pheno$Bloco)
pheno$GEN   = as.factor(pheno$Subject_id)
pheno$CLONE = as.factor(pheno$Tratamento)
pheno$SITE  = as.factor(pheno$Local)
pheno$TRIAL = as.factor(pheno$EXP)
pheno$YEAR  = as.factor(pheno$Ano)
pheno$Linha  = as.factor(pheno$Linha)
pheno$CHECK = as.factor(ifelse(pheno$Testemunha == "SIM", 1, 0))
str(pheno)
pheno$VOL_d3  = as.numeric(pheno$Volume * 1000)
pheno$Parcela  = as.factor(pheno$Parcela)
pheno$ROW  = as.factor(pheno$ROW)
pheno$COL  = as.factor(pheno$COL)
pheno = pheno[order(pheno$COL, pheno$ROW), ]
# Replace the Trials names
replacements =c("T_1" = "1", "T_2"= "2", "T_3" = "3",
"T_4" = "4", "T_5" = "5", "T_6" = "6",
"T_7" = "7", "T_8" = "8",  "T_9" = "9",
"T_10" ="10", "T_11" ="11", "T_12" ="12" )
# Use ifelse to replace strings
pheno$TRIAL  <- as.factor(ifelse(pheno$TRIAL  %in% names(replacements),
replacements[as.factor(pheno$TRIAL)],
pheno$TRIAL ))
replacements2 =c("Mat達o" = "1", "Palmito"= "2")
# Use ifelse to replace strings
pheno$SITE  <- as.factor(ifelse(pheno$SITE  %in% names(replacements2),
replacements2[as.factor(pheno$SITE)],
pheno$SITE ))
str(pheno)
pheno = pheno[ , -c(5:6)]
pheno$group = as.factor(paste(pheno$TRIAL, pheno$SITE, sep= "_"))
levels(pheno$group)
write_csv(pheno, "C:/Users/LENOVO/OneDrive/POS-DOC/TPC/data/new_pheno.csv", col_names = TRUE)
# Take only the last measurement ------------------------------------------
levels(pheno$YEAR)
pheno_3y = droplevels(subset(pheno, YEAR ==3))
str(pheno_3y)
# Standardization of the data  ------------------------------------------
###  y_std =(y-siteMean_y)/siteSD_y   ####
pheno_3y=  pheno_3y %>%
group_by(SITE) %>%
mutate(Y_std = scale(VOL_d3))
str(pheno_3y)
write.csv(pheno_3y, "data/pheno_3y.csv")
pheno_3y=  pheno_3y %>%
group_by(SITE) %>%
mutate(Y_std = scale(VOL_d3))
str(pheno_3y)
write.csv(pheno_3y, "data/pheno_3y.csv")
# Descriptive Analyses ----------------------------------------------------
# TPC: MET (random Ibloc) -------------------------------------------------------------------
rm(list=ls())
gc()
# Library -----------------------------------------------------------------
# Install pacman if not already installed
# if (!require("pacman")) {
#   install.packages("pacman")
#   library(pacman)
# }
# List of packages to load
packages <- c("tidyverse", "asreml", "lme4", "car", "snpReady", "AGHmatrix",
"ASRgenomics", "redxl", "data.table", "gridExtra", "PupillometryR",
"readxl")
# Use pacman to load and install packages if needed
pacman::p_load(char = packages)
# Load functions
#source("ic_reml_asr.R")
# Phenotypic data ---------------------------------------------------------
pheno <- read_excel("data_raw/TPC-MS_info_v2_unesp.xlsx",
sheet = "phenotype")
#05_fit_stage
rm(list = ls())
library(tidyverse)
library(readr)
library(readxl)
library(asreml)
library(ASRgenomics)
library(AGHmatrix)
# Mat達o -------------------------------------------------------------------
mat_list = read_rds("data/mat_list.RDS")
